specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#=====```
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
# Directory for results
dir_work <- dir_data
# Run this
paircon <- remove_implicits(paircon_in) # Remove rows that don't add info
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
library(readxl) # Read excel
library(cmdstanr) # Interface to Stan
library(posterior) # Process Stan draws
library(doParallel) # R Multi-threading for EB
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan.R")
set_cmdstan_path("/home/rstudio/cmdstan")
# Specify names for data files and output
data_file <- "Data_Train.csv"
specs_file <- "Coding_and_Constraints_Sawtooth.xlsx" # Coding and constraints file
out_prefix <- "F1234" # Your name for output files (prefix)
#=====
dir_data <- "/home/rstudio"
if (!file.exists(file.path(dir_data, data_file))){
message(paste0("Cannot find your data file: ", data_file))
} else {
data_in <- read.csv(file.path(dir_data, data_file), as.is=TRUE)
message("READ DATA INTO R FILE: data_in")
str(data_in)
}
if (!file.exists(file.path(dir_data, specs_file))){
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
paircon_in <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(paircon_in)
}
#============
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
par(mar = c(4, 4, .5, .1))
plot(mpg ~ hp, data = mtcars, pch = 19)
head(mtcars)
par(mar = c(4, 4, .5, .1))
plot(mpg ~ hp, data = mtcars, pch = 19)
head(mtcars)
## Results {.tabset}
### Plots
We show a scatter plot in this section.
```{r, fig.dim=c(5, 3)}
par(mar = c(4, 4, .5, .1))
plot(mpg ~ hp, data = mtcars, pch = 19)
par(mar = c(4, 4, .5, .1))
plot(mpg ~ hp, data = mtcars, pch = 19)
head(mtcars)
par(mar = c(4, 4, .5, .1))
plot(mpg ~ hp, data = mtcars, pch = 19)
head(mtcars)
par(mar = c(4, 4, .5, .1))
plot(mpg ~ hp, data = mtcars, pch = 19)
# Specify names for data file, Excel attribute/constraints specs, and output
data_file <- "YourDataFile.csv" # .csv or .rds
specs_file <- "Coding_and_Constraints.xlsx" # Coding and constraints file
out_prefix <- "F6367" # Your name for output files (prefix)
{
dir_data <- "/home/rstudio"
data_in <- read_data(dir_data, data_file) # Read data file in (csv or rds)
if (!file.exists(file.path(dir_data, specs_file))){ # Read excel specs
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
pair_constraints <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(pair_constraints)
}
}
data_in <- read_data(dir_data, data_file) # Read data file in (csv or rds)
if (!file.exists(file.path(dir_data, specs_file))){ # Read excel specs
message(paste0("Cannot find your Excel specs file: ", specs_file))
} else {
att_coding <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Att_Coding", col_types = c("text","text","numeric")))
pair_constraints <- data.frame(read_xlsx(file.path(dir_data,specs_file), sheet = "Pair_Constraints",col_types = c("text","numeric","numeric")))
message("\nREAD SPECS INTO R")
cat("ATTRIBUTES\n"); print(att_coding)
cat("\nPAIRED CONSTRAINTS"); print(pair_constraints)
}
}
```
This is some text: `r specs_file`
```{r}
x <- 5  # radius of a circle
```
For a circle with the radius `r x`,
its area is `r pi * x^2`.
x <- 5  # radius of a circle
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan2.R")
stan_compile_and_est
stan_compile_and_est
data_file <- "F6367_R.rds" # YOUR .csv or .rds
specs_file <- "Coding_and_Constraints_F6367.xlsx" # YOUR Coding and constraints file
out_prefix <- "F6367" # YOUR name for output files (prefix)
#####  Specify Stan Model ###############
stan_controls <- list(
stan_file = "BaseHB_wPairCon_v2.1.stan", # Specify name of stan file in directory above
dir_stanmodel = "/home/rstudio/StanCode", # Specify directory of stan model code
dir_stanout = dir_stanmodel, # On PC this should be folder that does not sync
outname = paste0(out_prefix, "_StanOut_",
format(Sys.time(), '%Y%m%d-%H%M%S')) # Base Name of Stan Output files
)
? modifyList
# Friendly output
cat("2. Prepared data_stan with coded data and constraints\n")
dep <- c(0,1,0,1,1,1,0)
quantile(dep)
sum(dep)
hist(dep)
cat(paste0("    ",length(resp_id)), " Respondents\n")
km <- function{
message("test")
}
km
km <- function{
message("test")
}
km <- function(){
message("test")
}
km
km()
read_data
source("https://raw.githubusercontent.com/klattery/Estimation-Ecosystem/master/EE_Functions_Stan2.R")
cov_file <- NULL # Optional covariates file: 1st column must be id matching data_file, then variables
cov_in <- read_data(dir_data, cov_file)
read_data
prep_file_stan
# libraries
library(shiny)
library(tidyverse)
library(dplyr)
library(reshape2)
library(shinycssloaders)
library(shinythemes)
library(DT)
source("https://raw.githubusercontent.com/klattery/Unspoken/master/Attraction_Conversion_Design_Generator_20SET20_kl.R")
source("https://raw.githubusercontent.com/klattery/Unspoken/master/UnspokenDesign_RShiny.R")
shinyApp(ui,server)
source("https://raw.githubusercontent.com/klattery/Unspoken/master/Attraction_Conversion_Design_Generator_20SET20_kl2.R")
source("https://raw.githubusercontent.com/klattery/Unspoken/master/UnspokenDesign_RShiny.R")
shinyApp(ui,server)
? pivot_longer
? optim
sqrt(.Machine$double.eps)
.Machine$double.eps
.Machine$double.eps * 100
? print.table
DF = data.frame(integer = 1:10,
numeric = rnorm(10),
logical = rep(TRUE, 10),
character = LETTERS[1:10],
factor = factor(letters[1:10], levels = letters[10:1],
ordered = TRUE),
factor_allow = factor(letters[1:10], levels = letters[10:1],
ordered = TRUE),
date = seq(from = Sys.Date(), by = "days", length.out = 10),
stringsAsFactors = FALSE)
library(rhandsontable)
rhandsontable(DF, width = 600, height = 300) %>%
hot_col("factor_allow", allowInvalid = TRUE)
View(DF)
DataEditR:::data_edit()
View(DF)
DataEditR:::data_edit()
DataEditR:::data_edit()
DataEditR:::data_edit()
DataEditR:::data_edit()
DataEditR:::data_edit()
View(DF)
DataEditR:::data_edit()
View(DF)
data_edit(DF)
library(DataEditR)
data_edit(DF)
View(DF)
data_edit(DF)
View(DF)
data_edit(DF)
View(DF)
data_edit(DF)
View(DF)
