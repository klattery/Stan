plot(pred, dep)
kdata <- cbind(dep, ind)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep~. kdata)
fit_ols <- lm(dep ~., kdata)
fit_ols$betas
fit_ols$coefficients
corwdep <- as.vector(cor(dep, ind))
plot(corwdep, fit_ols$coefficients)
plot(corwdep, fit_ols$coefficients[-1])
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_prior = corwdep,
beta_prior_sigma = .5
)
library(cmdstanr)
dir_stan <- "C:/Users/K.Lattery/Documents/GitHub/Stan/Models"
HB_model <- cmdstan_model(file.path(dir_stan,"LinearRegressionv2.stan"), quiet = TRUE)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
beta_stan <- HB_fit$summary(variables = "beta") # general fit stats
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
pred_stan_raw <- data_stan$ind %*% beta_stan$mean
pred_stan <- pred_stan_raw  * sd(dep)/sd(pred_stan_raw) + mean(dep) - mean(pred_stan_raw)
plot(pred_stan, dep)
plot(beta_stan$mean, corwdep)
plot(fit_ols$coefficients[-1], beta_stan$mean)
plot(corwdep, beta_stan$mean)
plot_draws_df <- function(draws, vnames = NULL, ylab = "Draw",
chain_colors = rep(c("red","blue","green","black"),2)){
# Assume draws is a list of data frames
# Each data frame is draws for one chain of results with rows for iterations
# We plot each column
if (is.null(vnames)) vnames <- colnames(draws[[1]]) # take names from first data frame
fit_stats <- data.frame(
variable = vnames,
mean = NA,
sd =  NA,
rhat = NA,
ESS = NA
)
for (i in 1:ncol(draws[[1]])){
x <- sapply(1:length(draws), function(chain){
draws[[chain]][,i]
})
fit_stats$mean[i] <- round(mean(x), 2)
fit_stats$sd[i] <- round(sd(x),2)
fit_stats$rhat[i] <- round(rhat(x),2)
fit_stats$ESS[i] <- round(ess_basic(x),1)
plot(x[,1], type = "l", col = chain_colors[1], ylim = c(min(x), max(x)),
xlab = "Sample Iteration", ylab = "Draw",
main = paste(vnames[i],
"| rhat = ", round(rhat(x),2),
"| ESS = ", round(ess_basic(x),1)
))
if (ncol(x) > 1){
for (chain in 2:ncol(x)){
lines(x[,chain], type = "l", col = chain_colors[chain])
}
}
} # end for
return(fit_stats)
}
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
plot_draws_df(draws_beta$post_warmup_draws)
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
pred_stan_raw <- data_stan$ind %*% beta_stan$mean
pred_stan <- pred_stan_raw  * sd(dep)/sd(pred_stan_raw) + mean(dep) - mean(pred_stan_raw)
plot(dep, pred_stan)
points(dep, pred)
plot(dep, pred_stan)
points(dep, pred, col = "red")
plot(dep, pred_stan - pred)
plot(pred, pred_stan)
plot(dep, pred_stan - pred)
plot(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
N <- 300
P <- 5
ind1 <- matrix(rnorm(N *P), N, P)
ind2 <- matrix(rnorm(N *P), N, P)
plot(ind1[,1], ind1[,1] + ind2[,1])
ind <- cbind(ind1, ind1 + ind2)
look <- cor(ind)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
corwdep <- as.vector(cor(dep, ind))
plot(corwdep, fit_ols$coefficients[-1])
ind1 <- matrix(rnorm(N *P), N, P)
ind2 <- matrix(rnorm(N *P)/2, N, P)
plot(ind1[,1], ind1[,1] + ind2[,1])
ind <- cbind(ind1, ind1 + ind2)
look <- cor(ind)
View(look)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
corwdep <- as.vector(cor(dep, ind))
plot(corwdep, fit_ols$coefficients[-1])
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_prior = corwdep,
beta_prior_sigma = .5
)
library(cmdstanr)
dir_stan <- "C:/Users/K.Lattery/Documents/GitHub/Stan/Models"
HB_model <- cmdstan_model(file.path(dir_stan,"LinearRegressionv2.stan"), quiet = TRUE)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_prior = corwdep,
beta_prior_sigma = .1
)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
plot(corwdep, beta_stan$mean)
points(corwdep, fit_ols$coefficients[-1], col = "red")
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_prior = corwdep,
beta_prior_sigma = .05
)
HB_model <- cmdstan_model(file.path(dir_stan,"LinearRegressionv2.stan"), quiet = TRUE)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
View(beta_stan)
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
plot(corwdep, beta_stan$mean)
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "Stan")
plot(corwdep, fit_ols$coefficients[-1], col = "red")
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = .05 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
library(cmdstanr)
dir_stan <- "C:/Users/K.Lattery/Documents/GitHub/Stan/Models"
HB_model <- cmdstan_model(file.path(dir_stan,"LinearRegressionv2.stan"), quiet = TRUE)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
points(corwdep, beta_stan$mean)
plot(fit_ols$coefficients[-1], beta_stan$mean)
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = .01 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
plot(fit_ols$coefficients[-1], beta_stan$mean)
points(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "Stan")
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = .0001 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "Stan")
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = .1 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
HB_model <- cmdstan_model(file.path(dir_stan,"LinearRegressionv2.stan"), quiet = TRUE)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "Stan")
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
plot(fit_ols$coefficients[-1], beta_stan$mean)
plot(corwdep, fit_ols$coefficients[-1], col = "red")
points(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "red = OLS")
cor(cbind(corwdep, fit_ols$coefficients[-1], beta_stan$mean))
N <- 300
P <- 3
ind1 <- matrix(rnorm(N *P), N, P)
ind1 <- matrix(rnorm(N *P), N, P)
ind2 <- matrix(rnorm(N *P)/2, N, P)
ind3 <- matrix(rnorm(N *P)/2, N, P)
ind <- cbind(ind1, ind1 + ind2, ind1 + ind3)
look <- cor(ind)
View(look)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2)
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
corwdep <- as.vector(cor(dep, ind))
plot(corwdep, fit_ols$coefficients[-1])
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = .1 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
HB_model <- cmdstan_model(file.path(dir_stan,"LinearRegressionv2.stan"), quiet = TRUE)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "Stan")
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = 1 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
HB_fit <- HB_model$sample(data_stan,
iter_warmup = 1000,
iter_sampling = 1000,
output_dir = "C:/StanRuns",
output_basename = "DI", # set stan_outname above if changing
chains = 2,
parallel_chains = 2,
save_warmup = TRUE,
refresh = 10,
adapt_delta = .8,
seed = 271,
init = .1,
show_messages = FALSE,
validate_csv = FALSE)
draws_beta <- read_cmdstan_csv(HB_fit$output_files(), variables = "beta", format = "draws_list")
beta_stan <- plot_draws_df(draws_beta$post_warmup_draws)
plot(corwdep, beta_stan$mean, xlab = "Correlation", ylab = "Stan")
plot(fit_ols$coefficients[-1], beta_stan$mean)
cor(cbind(corwdep, fit_ols$coefficients[-1], beta_stan$mean))
N <- 300
P <- 3
ind1 <- matrix(rnorm(N *P), N, P)
ind2 <- matrix(rnorm(N *P)/2, N, P)
ind3 <- matrix(rnorm(N *P)/2, N, P)
ind <- cbind(ind1, ind1 + ind2, ind1 + ind3, ind2 + ind3)
look <- cor(ind)
View(look)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
ind1 <- matrix(rnorm(N *P), N, P)
ind2 <- matrix(rnorm(N *P)/2, N, P)
ind3 <- matrix(rnorm(N *P)/2, N, P)
ind <- cbind(ind1, ind1 + ind2, ind1 + ind3, ind1 + ind2 + ind3)
look <- cor(ind)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
ind1 <- matrix(rnorm(N *P), N, P)
ind2 <- matrix(rnorm(N *P)/2, N, P)
ind3 <- matrix(rnorm(N *P)/2, N, P)
ind <- cbind(ind1, ind1 + ind2, ind1 + ind3, ind1 + ind2 + ind3 +rnorm(N)/10)
look <- cor(ind)
beta <- rnorm(P)
beta <- c(beta, beta + rnorm(P)/2, beta + rnorm(P)/2, beta + rnorm(P)/2)
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
ind_base <- matrix(rnorm(N *P), N, P)
ind_base <- matrix(rnorm(N *P), N, P)
ind <- sapply(1:5, function(x) ind_base + rnorm(N *P)/2, N, P)
ind_base <- matrix(rnorm(N *P), N, P)
ind <- sapply(1:5, function(x) ind_base + matrix(rnorm(N *P)/2, N, P))
ind <- lapply(1:5, function(x) ind_base + matrix(rnorm(N *P)/2, N, P))
ind <- do.call(cbind, lapply(1:5, function(x) ind_base + matrix(rnorm(N *P)/2, N, P)))
look <- cor(ind)
View(look)
beta <- rnorm(P)
beta <- rnorm(ncol(ind))
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
corwdep <- as.vector(cor(dep, ind))
plot(corwdep, fit_ols$coefficients[-1])
data_stan <- list(
N = nrow(ind),
P = ncol(ind),
ind = ind,
dep = dep,
beta_mu = corwdep,
beta_sigma_hyper = 1 # beta_sigma ~ normal(0, beta_sigma_hyper)
)
plot(corwdep, beta)
plot(beta, fit_ols$coefficients[-1])
P <- 1
ind_base <- matrix(rnorm(N *P), N, P)
ind <- do.call(cbind, lapply(1:5, function(x) ind_base + matrix(rnorm(N *P)/2, N, P)))
look <- cor(ind)
View(look)
beta <- rnorm(ncol(ind))
pred <- ind %*% beta
dep <- as.vector(pred + rnorm(N))
plot(pred, dep)
kdata <- data.frame(cbind(dep, ind))
fit_ols <- lm(dep ~., kdata)
fit_ols$coefficients
corwdep <- as.vector(cor(dep, ind))
plot(corwdep, fit_ols$coefficients[-1])
plot(corwdep, beta)
